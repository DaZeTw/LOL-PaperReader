{
  "summary": {
    "total_tests": 8,
    "successful_tests": 8,
    "failed_tests": 0,
    "success_rate": 100.0,
    "avg_answer_length": 297.62,
    "avg_citations": 3.0,
    "avg_retrieval_score": 0.3347,
    "test_run_timestamp": "2025-10-19T17:14:07.031530"
  },
  "results": [
    {
      "test_id": "qa_001",
      "question": "What is the main contribution of the paper 'Attention Is All You Need'?",
      "images": [],
      "expected_answer": "It introduces the Transformer architecture, which relies entirely on self-attention mechanisms instead of recurrence or convolution.",
      "actual_answer": "The main contribution of the paper \"Attention Is All You Need\" is the introduction of the Transformer model, which relies entirely on self-attention mechanisms to compute representations of input and output sequences without using sequence-aligned recurrent neural networks (RNNs) or convolutional layers. This approach allows for parallelization and reduces the complexity of processing sequences, leading to improved performance in various tasks such as reading comprehension, summarization, and language modeling. The paper also discusses the advantages of self-attention and introduces the concept of Multi-Head Attention to counteract the loss of effective resolution due to averaging attention-weighted positions [c1], [c2].",
      "answer_length": 730,
      "num_citations": 3,
      "avg_retrieval_score": 0.2964,
      "retrieval_scores": [
        {
          "index": 82,
          "score": 0.30604022673447545
        },
        {
          "index": 7,
          "score": 0.30604022673447545
        },
        {
          "index": 92,
          "score": 0.30163012914868104
        },
        {
          "index": 17,
          "score": 0.30163012914868104
        },
        {
          "index": 89,
          "score": 0.2665967157829886
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "2 Background",
          "page": 5,
          "excerpt": "In the Transformer this is reduced to a constant number of operations, albeit at the cost of reduced effective resolution due to averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as described in section 3.2. Self-attention, sometimes called intra-attention is an attention mechanism relating different positions of a single sequence in order to compute a representation of the sequence. Self-attention has been used successfully in a variety of tasks including reading comprehension, abstractive summarization, textual entailment and learning task-independent sentence representations [4, 27, 28, 22]. End-to-end memory networks are based on a recurrent attention mechanism instead of sequencealigned recurrence and have been shown to perform well on simple-language question answering and language modeling tasks [34]. To the best of our knowledge, however, the Transformer is the first transduction model relying entirely on self-attention to compute representations of its input and output without using sequencealigned RNNs or convolution. In the following sections, we will describe the Transformer, motivate self-attention and discuss its advantages o"
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "3.2.1 Scaled Dot-Product Attention",
          "page": 10,
          "excerpt": "We call our particular attention \"Scaled Dot-Product Attention\" (Figure 2). The input consists of queries and keys of dimension d k , and values of dimension d v . We compute the dot products of the query with all keys, divide each by √ d k , and apply a softmax function to obtain the weights on the values. In practice, we compute the attention function on a set of queries simultaneously, packed together into a matrix Q . The keys and values are also packed together into matrices K and V . We compute the matrix of outputs as: $$\\text {Attention} ( Q , K , V ) = \\text {softmax} ( \\frac { Q K ^ { T } } { \\sqrt { d _ { k } } } ) V$$ The two most commonly used attention functions are additive attention [2], and dot-product (multiplicative) attention. Dot-product attention is identical to our algorithm, except for the scaling factor of 1 √ d k . Additive attention computes the compatibility function using a feed-forward network with a single hidden layer. While the two are similar in theoretical complexity, dot-product attention is much faster and more space-efficient in practice, since it can be implemented using highly optimized matrix multiplication code. While for small values o"
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "3.2 Attention",
          "page": 8,
          "excerpt": "An attention function can be described as mapping a query and a set of key-value pairs to an output, where the query, keys, values, and output are all vectors. The output is computed as a weighted sum"
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:13:44.859595"
    },
    {
      "test_id": "qa_002",
      "question": "What does Figure illustrate in the paper?",
      "images": [
        "figure1.png"
      ],
      "expected_answer": "Figure 1 shows the overall Transformer architecture with encoder and decoder blocks connected through attention layers.",
      "actual_answer": "Figure 4 illustrates the behavior of attention heads in the Transformer model, specifically in layer 5 of 6. It shows how different attention heads are involved in anaphora resolution, with the top part displaying full attentions for head 5 and the bottom part isolating attentions from the word \"its\" for heads 5 and 6. The attentions are notably sharp for the word \"its,\" indicating focused attention on that word. Additionally, the figure demonstrates that various attention heads exhibit behaviors related to the structure of the sentence, suggesting they have learned to perform different tasks [c4].",
      "answer_length": 605,
      "num_citations": 3,
      "avg_retrieval_score": 0.2934,
      "retrieval_scores": [
        {
          "index": 10,
          "score": 0.33064399594005744
        },
        {
          "index": 85,
          "score": 0.32051225934519206
        },
        {
          "index": 90,
          "score": 0.2735281913296369
        },
        {
          "index": 149,
          "score": 0.27194414607313966
        },
        {
          "index": 15,
          "score": 0.2705077996523304
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "Attention Visualizations Input-Input Layer5",
          "page": 28,
          "excerpt": "Best viewed in color. Input-Input Layer5 Figure 4: Two attention heads, also in layer 5 of 6, apparently involved in anaphora resolution. Top: Full attentions for head 5. Bottom: Isolated attentions from just the word 'its' for attention heads 5 and 6. Note that the attentions are very sharp for this word. Input-Input Layer5 Figure 5: Many of the attention heads exhibit behaviour that seems related to the structure of the sentence. We give two such examples above, from two different heads from the encoder self-attention at layer 5 of 6. The heads clearly learned to perform different tasks."
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "3 Model Architecture",
          "page": 6,
          "excerpt": "Figure 1: The Transformer - model architecture. The Transformer follows this overall architecture using stacked self-attention and point-wise, fully connected layers for both the encoder and decoder, shown in the left and right halves of Figure 1, respectively."
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "Scaled Dot-Product Attention",
          "page": 9,
          "excerpt": "Figure 2: (left) Scaled Dot-Product Attention. (right) Multi-Head Attention consists of several attention layers running in parallel."
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:13:50.748359"
    },
    {
      "test_id": "qa_003",
      "question": "How many attention heads are used in the original Transformer model?",
      "images": [],
      "expected_answer": "The model uses 8 attention heads.",
      "actual_answer": "The original Transformer model uses 8 attention heads in each multi-head attention layer [c1].",
      "answer_length": 94,
      "num_citations": 3,
      "avg_retrieval_score": 0.32,
      "retrieval_scores": [
        {
          "index": 61,
          "score": 0.32559896883342204
        },
        {
          "index": 136,
          "score": 0.32559896883342204
        },
        {
          "index": 80,
          "score": 0.31834211846009147
        },
        {
          "index": 5,
          "score": 0.31834211846009147
        },
        {
          "index": 22,
          "score": 0.3121346051315769
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "7 Conclusion",
          "page": 26,
          "excerpt": "In this work, we presented the Transformer, the first sequence transduction model based entirely on attention, replacing the recurrent layers most commonly used in encoder-decoder architectures with multi-headed self-attention. For translation tasks, the Transformer can be trained significantly faster than architectures based on recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014 English-to-French translation tasks, we achieve a new state of the art. In the former task our best model outperforms even all previously reported ensembles."
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "1 Introduction",
          "page": 4,
          "excerpt": "The fundamental constraint of sequential computation, however, remains. Attention mechanisms have become an integral part of compelling sequence modeling and transduction models in various tasks, allowing modeling of dependencies without regard to their distance in the input or output sequences [2, 19]. In all but a few cases [27], however, such attention mechanisms are used in conjunction with a recurrent network. In this work we propose the Transformer, a model architecture eschewing recurrence and instead relying entirely on an attention mechanism to draw global dependencies between input and output. The Transformer allows for significantly more parallelization and can reach a new state of the art in translation quality after being trained for as little as twelve hours on eight P100 GPUs."
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "3.2.3 Applications of Attention in our Model",
          "page": 12,
          "excerpt": "The Transformer uses multi-head attention in three different ways: - In \"encoder-decoder attention\" layers, the queries come from the previous decoder layer, and the memory keys and values come from the output of the encoder. This allows every position in the decoder to attend over all positions in the input sequence."
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:13:54.024881"
    },
    {
      "test_id": "qa_004",
      "question": "What are the main components inside each encoder layer?",
      "images": [
        "figure1.png",
        "figure2.png"
      ],
      "expected_answer": "Each encoder layer includes a multi-head self-attention mechanism and a position-wise feed-forward network, both followed by residual connections and layer normalization.",
      "actual_answer": "Each encoder layer consists of two main components: a multi-head self-attention mechanism and a positionwise fully connected feed-forward network. Additionally, there are residual connections around each of these two sub-layers, followed by layer normalization. The output of each sub-layer is computed as LayerNorm(x + Sublayer(x)), where Sublayer(x) is the function implemented by the sub-layer itself. The model also ensures that all sub-layers produce outputs of dimension d_model = 512 [c5].",
      "answer_length": 496,
      "num_citations": 3,
      "avg_retrieval_score": 0.3973,
      "retrieval_scores": [
        {
          "index": 11,
          "score": 0.43257155370015793
        },
        {
          "index": 86,
          "score": 0.43257155370015793
        },
        {
          "index": 98,
          "score": 0.3741908679963448
        },
        {
          "index": 23,
          "score": 0.3741908679963448
        },
        {
          "index": 87,
          "score": 0.37307157354148635
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "3.1 Encoder and Decoder Stacks",
          "page": 7,
          "excerpt": "The first is a multi-head self-attention mechanism, and the second is a simple, positionwise fully connected feed-forward network. We employ a residual connection [11] around each of the two sub-layers, followed by layer normalization [1]. That is, the output of each sub-layer is LayerNorm( x +Sublayer( x )) , where Sublayer( x ) is the function implemented by the sub-layer itself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding layers, produce outputs of dimension d model = 512 . Decoder: The decoder is also composed of a stack of N = 6 identical layers. In addition to the two sub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head attention over the output of the encoder stack. Similar to the encoder, we employ residual connections around each of the sub-layers, followed by layer normalization. We also modify the self-attention sub-layer in the decoder stack to prevent positions from attending to subsequent positions. This masking, combined with fact that the output embeddings are offset by one position, ensures that the predictions for position i can depend only on the known outputs at po"
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "3.1 Encoder and Decoder Stacks",
          "page": 7,
          "excerpt": "Encoder: The encoder is composed of a stack of N = 6 identical layers. Each layer has two sub-layers."
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "3.2.3 Applications of Attention in our Model",
          "page": 12,
          "excerpt": "This mimics the typical encoder-decoder attention mechanisms in sequence-to-sequence models such as [38, 2, 9]. - The encoder contains self-attention layers. In a self-attention layer all of the keys, values and queries come from the same place, in this case, the output of the previous layer in the encoder. Each position in the encoder can attend to all positions in the previous layer of the encoder. - Similarly, self-attention layers in the decoder allow each position in the decoder to attend to all positions in the decoder up to and including that position. We need to prevent leftward information flow in the decoder to preserve the auto-regressive property. We implement this inside of scaled dot-product attention by masking out (setting to -∞ ) all values in the input of the softmax which correspond to illegal connections. See Figure 2."
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:13:57.404374"
    },
    {
      "test_id": "qa_005",
      "question": "On which dataset was the Transformer evaluated?",
      "images": [],
      "expected_answer": "The Transformer was evaluated on the WMT 2014 English-to-German and English-to-French translation datasets.",
      "actual_answer": "The Transformer was evaluated on the WMT 2014 English-to-German and WMT 2014 English-to-French translation tasks [c1], [c2], [c3], [c4], [c5].",
      "answer_length": 142,
      "num_citations": 3,
      "avg_retrieval_score": 0.3144,
      "retrieval_scores": [
        {
          "index": 136,
          "score": 0.32267015270580446
        },
        {
          "index": 61,
          "score": 0.32267015270580446
        },
        {
          "index": 119,
          "score": 0.3217627739973894
        },
        {
          "index": 44,
          "score": 0.3217627739973894
        },
        {
          "index": 1,
          "score": 0.2831747156063842
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "7 Conclusion",
          "page": 26,
          "excerpt": "In this work, we presented the Transformer, the first sequence transduction model based entirely on attention, replacing the recurrent layers most commonly used in encoder-decoder architectures with multi-headed self-attention. For translation tasks, the Transformer can be trained significantly faster than architectures based on recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014 English-to-French translation tasks, we achieve a new state of the art. In the former task our best model outperforms even all previously reported ensembles."
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "6.1 Machine Translation",
          "page": 23,
          "excerpt": "On the WMT 2014 English-to-German translation task, the big transformer model (Transformer (big) in Table 2) outperforms the best previously reported models (including ensembles) by more than 2 . 0 BLEU, establishing a new state-of-the-art BLEU score of 28 . 4 . The configuration of this model is listed in the bottom line of Table 3. Training took 3 . 5 days on 8 P100 GPUs. Even our base model surpasses all previously published models and ensembles, at a fraction of the training cost of any of the competitive models. On the WMT 2014 English-to-French translation task, our big model achieves a BLEU score of 41 . 0 , outperforming all of the previously published single models, at less than 1 / 4 the training cost of the previous state-of-the-art model. The Transformer (big) model trained for English-to-French used dropout rate P drop = 0 . 1 , instead of 0 ."
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "Abstract",
          "page": 3,
          "excerpt": "The dominant sequence transduction models are based on complex recurrent or convolutional neural networks that include an encoder and a decoder. The best performing models also connect the encoder and decoder through an attention mechanism. We propose a new simple network architecture, the Transformer, based solely on attention mechanisms, dispensing with recurrence and convolutions entirely. Experiments on two machine translation tasks show these models to be superior in quality while being more parallelizable and requiring significantly less time to train. Our model achieves 28.4 BLEU on the WMT 2014 Englishto-German translation task, improving over the existing best results, including ensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task, our model establishes a new single-model state-of-the-art BLEU score of 41.8 after training for 3.5 days on eight GPUs, a small fraction of the training costs of the best models from the literature. We show that the Transformer generalizes well to other tasks by applying it successfully to English constituency parsing both with large and limited training data. ∗ Equal contribution. Listing order is random. Jakob propose"
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:13:59.458554"
    },
    {
      "test_id": "qa_noise_001",
      "question": "What animal is shown in the image and how does it relate to the Transformer model?",
      "images": [
        "cat.jpeg"
      ],
      "expected_answer": "The image is unrelated to the Transformer paper and shows no connection to its content.",
      "actual_answer": "No image was provided in your query.",
      "answer_length": 36,
      "num_citations": 3,
      "avg_retrieval_score": 0.3609,
      "retrieval_scores": [
        {
          "index": 10,
          "score": 0.42024862825367537
        },
        {
          "index": 85,
          "score": 0.4154287082793445
        },
        {
          "index": 119,
          "score": 0.33163791700638323
        },
        {
          "index": 44,
          "score": 0.33163791700638323
        },
        {
          "index": 80,
          "score": 0.30537248562876407
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "3 Model Architecture",
          "page": 6,
          "excerpt": "Figure 1: The Transformer - model architecture. The Transformer follows this overall architecture using stacked self-attention and point-wise, fully connected layers for both the encoder and decoder, shown in the left and right halves of Figure 1, respectively."
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "6.1 Machine Translation",
          "page": 23,
          "excerpt": "On the WMT 2014 English-to-German translation task, the big transformer model (Transformer (big) in Table 2) outperforms the best previously reported models (including ensembles) by more than 2 . 0 BLEU, establishing a new state-of-the-art BLEU score of 28 . 4 . The configuration of this model is listed in the bottom line of Table 3. Training took 3 . 5 days on 8 P100 GPUs. Even our base model surpasses all previously published models and ensembles, at a fraction of the training cost of any of the competitive models. On the WMT 2014 English-to-French translation task, our big model achieves a BLEU score of 41 . 0 , outperforming all of the previously published single models, at less than 1 / 4 the training cost of the previous state-of-the-art model. The Transformer (big) model trained for English-to-French used dropout rate P drop = 0 . 1 , instead of 0 ."
        },
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "1 Introduction",
          "page": 4,
          "excerpt": "The fundamental constraint of sequential computation, however, remains. Attention mechanisms have become an integral part of compelling sequence modeling and transduction models in various tasks, allowing modeling of dependencies without regard to their distance in the input or output sequences [2, 19]. In all but a few cases [27], however, such attention mechanisms are used in conjunction with a recurrent network. In this work we propose the Transformer, a model architecture eschewing recurrence and instead relying entirely on an attention mechanism to draw global dependencies between input and output. The Transformer allows for significantly more parallelization and can reach a new state of the art in translation quality after being trained for as little as twelve hours on eight P100 GPUs."
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:14:01.909723"
    },
    {
      "test_id": "qa_noise_002",
      "question": "Does the Transformer use convolutional layers as shown in the image?",
      "images": [
        "cnn_diagram.jpeg"
      ],
      "expected_answer": "No, the Transformer does not use convolutional layers; it relies entirely on attention mechanisms.",
      "actual_answer": "No image was provided in your query. However, based on the context, the Transformer architecture does not use convolutional layers; it is based entirely on attention mechanisms, dispensing with recurrence and convolutions entirely [c3], [c5].",
      "answer_length": 242,
      "num_citations": 3,
      "avg_retrieval_score": 0.4129,
      "retrieval_scores": [
        {
          "index": 10,
          "score": 0.4620801759128864
        },
        {
          "index": 85,
          "score": 0.4488629124947071
        },
        {
          "index": 136,
          "score": 0.42330954203267135
        },
        {
          "index": 61,
          "score": 0.42330954203267135
        },
        {
          "index": 1,
          "score": 0.30682480529156564
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "7 Conclusion",
          "page": 26,
          "excerpt": "In this work, we presented the Transformer, the first sequence transduction model based entirely on attention, replacing the recurrent layers most commonly used in encoder-decoder architectures with multi-headed self-attention. For translation tasks, the Transformer can be trained significantly faster than architectures based on recurrent or convolutional layers. On both WMT 2014 English-to-German and WMT 2014 English-to-French translation tasks, we achieve a new state of the art. In the former task our best model outperforms even all previously reported ensembles."
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "Abstract",
          "page": 3,
          "excerpt": "The dominant sequence transduction models are based on complex recurrent or convolutional neural networks that include an encoder and a decoder. The best performing models also connect the encoder and decoder through an attention mechanism. We propose a new simple network architecture, the Transformer, based solely on attention mechanisms, dispensing with recurrence and convolutions entirely. Experiments on two machine translation tasks show these models to be superior in quality while being more parallelizable and requiring significantly less time to train. Our model achieves 28.4 BLEU on the WMT 2014 Englishto-German translation task, improving over the existing best results, including ensembles, by over 2 BLEU. On the WMT 2014 English-to-French translation task, our model establishes a new single-model state-of-the-art BLEU score of 41.8 after training for 3.5 days on eight GPUs, a small fraction of the training costs of the best models from the literature. We show that the Transformer generalizes well to other tasks by applying it successfully to English constituency parsing both with large and limited training data. ∗ Equal contribution. Listing order is random. Jakob propose"
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "3 Model Architecture",
          "page": 6,
          "excerpt": "Figure 1: The Transformer - model architecture. The Transformer follows this overall architecture using stacked self-attention and point-wise, fully connected layers for both the encoder and decoder, shown in the left and right halves of Figure 1, respectively."
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:14:05.460243"
    },
    {
      "test_id": "qa_noise_005",
      "question": "What is the output shown in the image below?",
      "images": [],
      "expected_answer": "There is no image provided, so no visual content can be described.",
      "actual_answer": "No image was provided in your query.",
      "answer_length": 36,
      "num_citations": 3,
      "avg_retrieval_score": 0.2821,
      "retrieval_scores": [
        {
          "index": 100,
          "score": 0.3190017202805928
        },
        {
          "index": 25,
          "score": 0.3190017202805928
        },
        {
          "index": 59,
          "score": 0.25960063914611764
        },
        {
          "index": 134,
          "score": 0.25960063914611764
        },
        {
          "index": 42,
          "score": 0.2534474713222009
        }
      ],
      "cited_sections": [
        {
          "doc_id": "1706.03762v7-referenced",
          "title": "3.3 Position-wise Feed-Forward Networks",
          "page": 13,
          "excerpt": "The dimensionality of input and output is d model = 512 , and the inner-layer has dimensionality d ff = 2048 ."
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "6.3 English Constituency Parsing",
          "page": 25,
          "excerpt": "(2006) [29] | WSJ only, discriminative | 90.4 | | Zhu et al. (2013) [40] | WSJ only, discriminative | 90.4 | | Dyer et al. (2016) [8] | WSJ only, discriminative | 91.7 | | Transformer (4 layers) | WSJ only, discriminative | 91.3 | | Zhu et al. (2013) [40] | semi-supervised | 91.3 | | Huang &Harper (2009) [14] | semi-supervised | 91.3 | | McClosky et al. (2006) [26] | semi-supervised | 92.1 | | Vinyals &Kaiser el al. (2014) [37] | semi-supervised | 92.1 | | Transformer (4 layers) | semi-supervised | 92.7 | | Luong et al. (2015) [23] | multi-task | 93 | | Dyer et al. (2016) [8] | generative | 93.3 | increased the maximum output length to input length + 300 . We used a beam size of 21 and α = 0 . 3 for both WSJ only and the semi-supervised setting. Our results in Table 4 show that despite the lack of task-specific tuning our model performs surprisingly well, yielding better results than all previously reported models with the ex"
        },
        {
          "doc_id": "1706.03762v7-embedded",
          "title": "5.4 Regularization",
          "page": 21,
          "excerpt": "3 · 10 19 | 1 . 4 · 10 20 | | ConvS2S [9] | 25.16 | 40.46 | 9 . 6 · 10 18 | 1 . 5 · 10 20 | | MoE [32] | 26.03 | 40.56 | 2 . 0 · 10 19 | 1 . 2 · 10 20 | | Deep-Att + PosUnk Ensemble [39] | | 40.4 | | 8 . 0 · 10 20 | | GNMT + RL Ensemble [38] | 26.30 | 41.16 | 1 . 8 · 10 20 | 1 . 1 · 10 21 | | ConvS2S Ensemble [9] | 26.36 | 41.29 | 7 . 7 · 10 19 | 1 . 2 · 10 21 | | Transformer (base model) | 27.3 | 38.1 | 3 . 3 · 10 18 | 3 . 3 · 10 18 | | Transformer (big) | 28.4 | 41.8 | 2 ."
        }
      ],
      "status": "success",
      "timestamp": "2025-10-19T17:14:07.030518"
    }
  ]
}